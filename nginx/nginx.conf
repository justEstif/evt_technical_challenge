user nginx; # run the process as an unprivileged user, prevent injection of malicious code
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
events {
    worker_connections 1024;
}
http {
    # define mime types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # log formatting
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    # access log configuration
    access_log /var/log/nginx/access.log main;

    server {
        listen 80; # listen on port 80

        # health probe: help make scheduling decisions based on the health of the server
        location = /status {
            access_log off;
            default_type text/plain;
            add_header Content-Type text/plain;
            return 200 "alive";
        }

        # location block for all traffic("/")
        location / {
            gzip off;
            root /usr/share/nginx/html/; # the folder where we will be able to serve additional html content
            index index.html; # receive an html file
        }

        location ~* \.(js|jpg|png|css)$ {
            root /usr/share/nginx/html/;
        }
    }

    sendfile on; # optimize file sending; enable direct copying of data fro mone file descriptor to another
    keepalive_timeout 65;
}
